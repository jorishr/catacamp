const express=require("express"),router=express.Router({mergeParams:!0}),{campgroundService:campgroundService,commentService:commentService}=require("../services/index"),{isLoggedIn:isLoggedIn,isCommentOwner:isCommentOwner}=require("../middleware/index");router.get("/new",isLoggedIn,async(e,r,t)=>{try{const c=await campgroundService.findById(e.params.id);r.render("comments/new-comment",{campground:c})}catch(e){return e.shouldRedirect=!0,t(e)}}),router.post("/",isLoggedIn,async(e,r,t)=>{try{const c=await campgroundService.findById(e.params.id);await c.populate("comments").execPopulate();const n=await commentService.create(e.body.comment);return n.author.id=e.user._id,n.author.username=e.user.username,n.save(),c.comments.push(n),c.save(),e.flash("success","New comment added!"),r.render("campgrounds/show-campground",{campground:c,api:process.env.GEOCODER_API_KEY_RESTRICTED,success:"Comment succesfully added!"})}catch(e){return e.shouldRedirect=!0,t(e)}}),router.get("/:comment_id/edit",isCommentOwner,async(e,r,t)=>{try{const c=await campgroundService.findById(e.params.id),n=await commentService.findById(e.params.comment_id);return r.render("comments/edit-comment",{campground:c,comment:n})}catch(e){return e.shouldRedirect=!0,t(e)}}),router.put("/:comment_id",isCommentOwner,async(e,r,t)=>{try{return await commentService.findByIdAndUpdate(e.params.comment_id,e.body.comment),e.flash("success","Comment succesfully updated!"),r.redirect(`/campgrounds/${e.params.id}`)}catch(e){return e.shouldRedirect=!0,t(e)}}),router.delete("/:comment_id",isCommentOwner,async(e,r,t)=>{try{return await commentService.findByIdAndRemove(e.params.comment_id),e.flash("success","Comment succesfully deleted!"),r.redirect(`/campgrounds/${e.params.id}`)}catch(e){return e.shouldRedirect=!0,t(e)}}),module.exports=router;