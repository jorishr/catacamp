const express=require("express"),router=express.Router(),User=require("../models/user"),Campground=require("../models/campground"),isProfileOwner=require("../middleware/isProfileOwner");router.get("/:id",async(e,r,s)=>{try{const a=await User.findById(e.params.id),d=await Campground.find().where("author.username").equals(a.username);return r.render("users/show",{userData:a,campgroundData:d})}catch(e){return e.shouldRedirect=!0,s(e)}}),router.get("/:id/edit",isProfileOwner,async(e,r,s)=>{try{const a=await User.findById(e.params.id);return r.render("users/edit",{userData:a})}catch(e){return e.shouldRedirect=!0,s(e)}}),router.put("/:id",isProfileOwner,async(e,r,s)=>{try{return await User.findByIdAndUpdate(e.params.id,e.body.profile),e.flash("success","Profile updated successfully!"),r.redirect(`/user/${e.params.id}`)}catch(e){return e.shouldRedirect=!0,s(e)}}),router.delete("/:id",isProfileOwner,async(e,r,s)=>{try{const a=await User.findById(e.params.id);return(await Campground.find().where("author.id").equals(a.id)).forEach(e=>{e.remove()}),a.remove(),e.flash("success","Sad to see you go! Your profile was deleted succesfully."),r.redirect("/campgrounds")}catch(e){return e.shouldRedirect=!0,s(e)}}),module.exports=router;