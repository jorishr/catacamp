const express=require("express"),router=express.Router(),User=require("../models/user"),Campground=require("../models/campground"),middleware=require("../middleware");router.get("/:id",(e,r,d)=>{User.findById(e.params.id,(e,s)=>{if(e)return e.shouldRedirect=!0,d(e);Campground.find().where("author.username").equals(s.username).exec((e,u)=>{if(e)return e.shouldRedirect=!0,d(e);r.render("users/show",{userData:s,campgroundData:u})})})}),router.get("/:id/edit",middleware.checkProfileOwnership,(e,r,d)=>{User.findById(e.params.id,(e,s)=>{if(e)return e.shouldRedirect=!0,d(e);r.render("users/edit",{userData:s})})}),router.put("/:id",middleware.checkProfileOwnership,(e,r,d)=>{User.findByIdAndUpdate(e.params.id,e.body.profile,(s,u)=>{if(s)return s.shouldRedirect=!0,d(s);console.log("\nProfile update success!\n\n",u),e.flash("success","Profile updated successfully!"),r.redirect(`/user/${e.params.id}`)})}),router.delete("/:id",middleware.checkProfileOwnership,(e,r,d)=>{User.findById(e.params.id,(s,u)=>{if(s)return s.shouldRedirect=!0,d(s);Campground.find().where("author.id").equals(u.id).exec((s,i)=>{if(s)return s.shouldRedirect=!0,d(s);i.forEach(e=>{e.remove()}),u.remove(),e.flash("success","Sad to see you go! Your profile was deleted succesfully."),r.redirect("/campgrounds"),console.log("\nDeleting user profile, success!\n")})})}),module.exports=router;